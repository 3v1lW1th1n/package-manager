.\" Man page generated from reStructuredText.
.
.TH "BRO-PKG" "1" "Aug 01, 2016" "0.2-14" "Bro Package Manager"
.SH NAME
bro-pkg \- Bro Package Manager
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
A command\-line package manager for Bro.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg [\-h] [\-\-version] [\-\-configfile CONFIGFILE] [\-\-verbose]
               {install,remove,refresh,upgrade,load,unload,pin,unpin,list,search,info,config,env}
               ...
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-\-version
show program\(aqs version number and exit
.TP
.B \-\-configfile
Path to Bro Package Manager config file.
.TP
.B \-\-verbose=0\fP,\fB  \-v=0
May be used multiple times (e.g. \-vvv) for increased program output (e.g. for debugging)
.UNINDENT
.TP
.B Sub\-commands:
.INDENT 7.0
.TP
\fBinstall\fP
Installs Bro packages.
.sp
Installs packages from a configured package source or directly from a git URL.  After installing, the package is marked as being "loaded" (see the "load" command).
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg install [\-h] [\-\-version VERSION] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or the submodule path within the package source. If two packages in different package sources have conflicting submodule paths, then the package name may be prepended to the submodule path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a packge in a source named "default" at submodule path "alice/foo", the following names work: "foo", "alice/foo", "default/alice/foo".
.UNINDENT
.TP
.B Options:
.INDENT 7.0
.TP
.B \-\-version
The version of the package to install.  Only one package may be specified at a time when using this flag.  A version tag or branch name may be specified here.  By default, the latest version tag is installed, or if a package has no version tags, the "master" branch is installed.
.UNINDENT
.UNINDENT
.TP
\fBremove\fP
Uninstall a package.
.sp
Unloads (see the "unload" command) and uninstalls a previously installed package.
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg remove [\-h] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or the submodule path within the package source. If two packages in different package sources have conflicting submodule paths, then the package name may be prepended to the submodule path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a packge in a source named "default" at submodule path "alice/foo", the following names work: "foo", "alice/foo", "default/alice/foo".
.UNINDENT
.UNINDENT
.TP
\fBrefresh\fP
Retrieve updated package information.
.sp
Update local package source clones to retrieve information about new packages that are available.  Also fetches updated package information about any installed packages to determine if new versions are available.  This does not upgrade installed packages (see the "upgrade" command for that).
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg refresh [\-h]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.UNINDENT
.TP
\fBupgrade\fP
Upgrade installed packages to latest versions.
.sp
Uprades the specified package(s) to latest available version.  If no specific packages are specified, then all installed packages that are outdated and not pinned are upgraded.  For packages that are installed with \(ga\-\-version\(ga using a git branch name, the package is updated to the latest commit on that branch, else the package is updated to the highest available git version tag.
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg upgrade [\-h] [package [package ...]]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or the submodule path within the package source. If two packages in different package sources have conflicting submodule paths, then the package name may be prepended to the submodule path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a packge in a source named "default" at submodule path "alice/foo", the following names work: "foo", "alice/foo", "default/alice/foo".
.UNINDENT
.UNINDENT
.TP
\fBload\fP
Register packages to be be auto\-loaded by Bro.
.sp
The Bro Package Manager keeps track of all packages that are marked as "loaded" and maintains a single Bro script that, when loaded by Bro (e.g. via "@load packages"), will load the scripts from all "loaded" packages at once. This command adds a set of packages to the "loaded packages" list.
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg load [\-h] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
Name(s) of package(s) to load.
.UNINDENT
.UNINDENT
.TP
\fBunload\fP
Unregister packages to be be auto\-loaded by Bro.
.sp
The Bro Package Manager keeps track of all packages that are marked as "loaded" and maintains a single Bro script that, when loaded by Bro, will load the scripts from all "loaded" packages at once.  This command removes a set of packages from the "loaded packages" list.
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg unload [\-h] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or the submodule path within the package source. If two packages in different package sources have conflicting submodule paths, then the package name may be prepended to the submodule path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a packge in a source named "default" at submodule path "alice/foo", the following names work: "foo", "alice/foo", "default/alice/foo".
.UNINDENT
.UNINDENT
.TP
\fBpin\fP
Prevent packages from being automatically upgraded.
.sp
Pinned packages will be ignored by the "upgrade" command.
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg pin [\-h] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or the submodule path within the package source. If two packages in different package sources have conflicting submodule paths, then the package name may be prepended to the submodule path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a packge in a source named "default" at submodule path "alice/foo", the following names work: "foo", "alice/foo", "default/alice/foo".
.UNINDENT
.UNINDENT
.TP
\fBunpin\fP
Allows packages to be automatically upgraded.
.sp
Packages that are not pinned are automatically upgraded by the "upgrade" command
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg unpin [\-h] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or the submodule path within the package source. If two packages in different package sources have conflicting submodule paths, then the package name may be prepended to the submodule path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a packge in a source named "default" at submodule path "alice/foo", the following names work: "foo", "alice/foo", "default/alice/foo".
.UNINDENT
.UNINDENT
.TP
\fBlist\fP
Lists packages.
.sp
Filters available/installed packages by a chosen category and then outputs that filtered package list.
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg list [\-h]
                    [{all,installed,not_installed,loaded,unloaded,outdated}]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bcategory
Package category used to filter listing.
.sp
Possible choices: all, installed, not_installed, loaded, unloaded, outdated
.UNINDENT
.UNINDENT
.TP
\fBsearch\fP
Search packages for matching names.
.sp
Perform a substring search on package names and metadata tags.  Surround search text with slashes to indicate it is a regular expression (e.g. "/text/").
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg search [\-h] search_text
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bsearch_text
The text/pattern to look for.
.UNINDENT
.UNINDENT
.TP
\fBinfo\fP
Display package information.
.sp
Shows detailed information/metadata for given packages. If the package is currently installed, additional information about the status of it is displayed.  E.g. the installed version or whether it is currently marked as "pinned" or "loaded."
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg info [\-h] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or the submodule path within the package source. If two packages in different package sources have conflicting submodule paths, then the package name may be prepended to the submodule path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a packge in a source named "default" at submodule path "alice/foo", the following names work: "foo", "alice/foo", "default/alice/foo".
.UNINDENT
.UNINDENT
.TP
\fBconfig\fP
Show Bro Package Manager configuration info.
.sp
The default output of this command is a valid package manager config file that corresponds to the one currently being used, but also with any defaulted field values filled in.  This command also allows for only the value of a specific field to be output if the name of that field is given as an argument to the command.
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg config [\-h]
                      [{all,sources,statedir,scriptdir,plugindir,bro_exe,bro_dist}]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bconfig_param
Name of a specific config file field to output.
.sp
Possible choices: all, sources, statedir, scriptdir, plugindir, bro_exe, bro_dist
.UNINDENT
.UNINDENT
.TP
\fBenv\fP
Show the value of environment variables that need to be set for Bro to be able to use installed packages.
.sp
This command returns shell commands that, when executed, will correctly set BROPATH and BRO_PLUGIN_PATH to utilize the scripts and plugins from packages installed by the package manager.  For this command to function properly, either the "bro_exe" field of the config file needs to be filled out, or the BROPATH and BRO_PLUGIN_PATH environment variables should already contain valid paths to which this command will append package\-specific paths to.
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg env [\-h]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Environment Variables:
.INDENT 0.0
.INDENT 3.5
BRO_PKG_CONFIG_FILE	Same as \-\-configfile option, but has less precedence.
.UNINDENT
.UNINDENT

.SH CONFIG FILE
.sp
The \fIbro\-pkg\fP command\-line client uses an INI\-format config file to allow users
to customize their Package Sources, Package
installation paths, Bro executable/source paths, and other package manager
client options.
.sp
See the default/example config file below for explanations of the
available options and how to customize them:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# This is an example config file for bro\-pkg to explain what
# settings are possible as well as their default values.
# The order of precedence for how bro\-pkg finds/reads config files:
#
# (1) bro\-pkg \-\-configfile=/path/to/custom/config
# (2) the BRO_PKG_CONFIG_FILE environment variable
# (3) a config file located at $HOME/.bro\-pkg/config
# (4) if bro\-pkg is installed along with bro, prefix/etc/bro\-pkg.config
# (5) if none of the above exist, then bro\-pkg uses builtin, default
#     values for all settings shown below

[sources]
# The default package source repository from which package manager
# clients fetch packages.  The default source may be removed, changed,
# or additional sources may be added as long as they use a unique key
# and a value that is a valid git URL.
default = https://github.com/bro/packages

[paths]
# Directory where source repositories are cloned, packages are installed,
# and other package manager state information is maintained.
# If left blank, this defaults to $HOME/.bro\-pkg
statedir =

# The directory where package scripts are copied upon installation.
# A subdirectory named \(aqpackages\(aq is always created within the specified
# path and the package manager will copy each package\(aqs \(aqscriptpath\(aq to
# that subdirectory as well as create a symlink within $scriptdir itself
# that points to the package\(aqs copied \(aqscriptpath\(aq.
# If left blank, this defaults to $statedir/scriptdir
# A typical path to set here is $bro_install_prefix/share/bro/site
scriptdir =

# The directory where package plugins are copied upon installation.
# A subdirectory named \(aqpackages\(aq is always created within the specified
# path and the package manager will work solely within that subdirectory.
# If left blank, this defaults to $statedir/plugindir
# A typical path to set here is $bro_install_prefix/lib/bro/plugins
plugindir =

# The path to the \(aqbro\(aq executable (e.g. /usr/local/bro/bin/bro).
# This is used by the \(aqbro\-pkg env\(aq command to determine built\-in
# BROPATH and BRO_PLUGIN_PATH settings the \(aqbro\(aq executable uses in the
# case those environment variables aren\(aqt set.
# If left empty, the PATH environment variable will be searched for the
# \(aqbro\(aq exectuable.
bro_exe =

# The path to Bro distribution source code.  This is only needed when
# installing packages that contain Bro plugins that are not pre\-built.
bro_dist =

.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
The Bro Project
.SH COPYRIGHT
2016, The Bro Project
.\" Generated by docutils manpage writer.
.
