.\" Man page generated from reStructuredText.
.
.TH "BRO-PKG" "1" "Jan 24, 2017" "0.9-23" "Bro Package Manager"
.SH NAME
bro-pkg \- Bro Package Manager
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
A command\-line package manager for Bro.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg [\-h] [\-\-version] [\-\-configfile CONFIGFILE] [\-\-verbose]
               {test,install,bundle,unbundle,remove,purge,refresh,upgrade,load,unload,pin,unpin,list,search,info,config,autoconfig,env}
               ...
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-\-version
show program\(aqs version number and exit
.TP
.B \-\-configfile
Path to Bro Package Manager config file.
.sp
See \fI\%Config File\fP\&.
.TP
.B \-\-verbose=0\fP,\fB  \-v=0
Increase program output for debugging. Use multiple times for more output (e.g. \-vvv).
.UNINDENT
.UNINDENT
.sp
Environment Variables:
.INDENT 0.0
.INDENT 3.5
\fBBRO_PKG_CONFIG_FILE\fP:	Same as \fB\-\-configfile\fP option, but has less precedence.
.UNINDENT
.UNINDENT

.SH COMMANDS
.SS test
.sp
Runs the unit tests for the specified Bro packages. In most cases, the "bro" and "bro\-config" programs will need to be in PATH before running this command.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg test [\-h] [\-\-version VERSION] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or its path within the package source. If two packages in different package sources have conflicting paths, then the package source name may be prepended to the package path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a package source called "bro" that has a package named "foo" located in "alice/bro\-pkg.index" the following names work: "foo", "alice/foo", "bro/alice/foo".
.UNINDENT
.TP
.B Options:
.INDENT 7.0
.TP
.B \-\-version
The version of the package to test.  Only one package may be specified at a time when using this flag.  A version tag or branch name may be specified here.  By default, the latest version tag is installed, or if a package has no version tags, the "master" branch is installed.
.UNINDENT
.UNINDENT
.SS install
.sp
Installs packages from a configured package source or directly from a git URL.  After installing, the package is marked as being "loaded" (see the \fBload\fP command).

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg install [\-h] [\-\-force] [\-\-skiptests] [\-\-version VERSION]
                       package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or its path within the package source. If two packages in different package sources have conflicting paths, then the package source name may be prepended to the package path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a package source called "bro" that has a package named "foo" located in "alice/bro\-pkg.index" the following names work: "foo", "alice/foo", "bro/alice/foo".
.UNINDENT
.TP
.B Options:
.INDENT 7.0
.TP
.B \-\-force=False
Skip the confirmation prompt.
.TP
.B \-\-skiptests=False
Skip running unit tests for packages before installation.
.TP
.B \-\-version
The version of the package to install.  Only one package may be specified at a time when using this flag.  A version tag or branch name may be specified here.  By default, the latest version tag is installed, or if a package has no version tags, the "master" branch is installed.
.UNINDENT
.UNINDENT
.SS remove
.sp
Unloads (see the \fBunload\fP command) and uninstalls a previously installed package.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg remove [\-h] [\-\-force] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or its path within the package source. If two packages in different package sources have conflicting paths, then the package source name may be prepended to the package path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a package source called "bro" that has a package named "foo" located in "alice/bro\-pkg.index" the following names work: "foo", "alice/foo", "bro/alice/foo".
.UNINDENT
.TP
.B Options:
.INDENT 7.0
.TP
.B \-\-force=False
Skip the confirmation prompt.
.UNINDENT
.UNINDENT
.SS purge
.sp
Unloads (see the \fBunload\fP command) and uninstalls all previously installed packages.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg purge [\-h] [\-\-force]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-\-force=False
Skip the confirmation prompt.
.UNINDENT
.UNINDENT
.SS bundle
.sp
This command creates a bundle file containing a collection of Bro packages.  If \fB\-\-manifest\fP is used, the user suplies the list of packages to put in the bundle, else all currently installed packages are put in the bundle. A bundle file can be unpacked on any target system, resulting in a repeatable/specific set of packages being installed on that target system (see the \fBunbundle\fP command).  This command may be useful for those that want to manage packages on a system that otherwise has limited network connectivity.  E.g. one can use a system with an internet connection to create a bundle, transport that bundle to the target machine using whatever means are appropriate, and finally unbundle/install it on the target machine.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg bundle [\-h] [\-\-force] [\-\-manifest MANIFEST [MANIFEST ...]]
                      bundle_filename
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bbundle_filename
The path of the bundle file to create. It will be overwritten if it already exists.
.UNINDENT
.TP
.B Options:
.INDENT 7.0
.TP
.B \-\-force=False
Skip the confirmation prompt.
.TP
.B \-\-manifest
This may either be a file name or a list of packages to include in the bundle.  If a file name is supplied, it should be in INI format with a single \(ga\(ga[bundle]\(ga\(ga section.  The keys in that section correspond to package names and their values correspond to git version tags or branch names.  The values may be left blank to indicate that the latest available version should be used.
.UNINDENT
.UNINDENT
.SS unbundle
.sp
This command unpacks a bundle file formerly created by the \fBbundle\fP command and installs all the packages contained within.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg unbundle [\-h] [\-\-force] [\-\-replace] bundle_filename
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bbundle_filename
The path of the bundle file to install.
.UNINDENT
.TP
.B Options:
.INDENT 7.0
.TP
.B \-\-force=False
Skip the confirmation prompt.
.TP
.B \-\-replace=False
Using this flag first removes all installed packages before then installing the packages from the bundle.
.UNINDENT
.UNINDENT
.SS refresh
.sp
Retrieve latest package metadata from sources and checks whether any installed packages have available upgrades. Note that this does not actually upgrade any packages (see the \fBupgrade\fP command for that).

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg refresh [\-h] [\-\-aggregate] [\-\-push]
                       [\-\-sources SOURCES [SOURCES ...]]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B \-\-aggregate=False
Crawls the urls listed in package source bro\-pkg.index files and aggregates the metadata found in their bro\-pkg.meta files.  The aggregated metadata is stored in the local clone of the package source that bro\-pkg uses internally locating package metadata. For each package, the metadata is taken from the highest available git version tag or the master branch if no version tags exist
.TP
.B \-\-push=False
Push all local changes to package sources to upstream repos
.TP
.B \-\-sources
A list of package source names to operate on.  If this argument is not used, then the command will operate on all configured sources.
.UNINDENT
.UNINDENT
.SS upgrade
.sp
Uprades the specified package(s) to latest available version.  If no specific packages are specified, then all installed packages that are outdated and not pinned are upgraded.  For packages that are installed with \fB\-\-version\fP using a git branch name, the package is updated to the latest commit on that branch, else the package is updated to the highest available git version tag.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg upgrade [\-h] [\-\-force] [\-\-skiptests] [package [package ...]]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or its path within the package source. If two packages in different package sources have conflicting paths, then the package source name may be prepended to the package path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a package source called "bro" that has a package named "foo" located in "alice/bro\-pkg.index" the following names work: "foo", "alice/foo", "bro/alice/foo".
.UNINDENT
.TP
.B Options:
.INDENT 7.0
.TP
.B \-\-force=False
Skip the confirmation prompt.
.TP
.B \-\-skiptests=False
Skip running unit tests for packages before installation.
.UNINDENT
.UNINDENT
.SS load
.sp
The Bro Package Manager keeps track of all packages that are marked as "loaded" and maintains a single Bro script that, when loaded by Bro (e.g. via \fB@load packages\fP), will load the scripts from all "loaded" packages at once. This command adds a set of packages to the "loaded packages" list.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg load [\-h] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
Name(s) of package(s) to load.
.UNINDENT
.UNINDENT
.SS unload
.sp
The Bro Package Manager keeps track of all packages that are marked as "loaded" and maintains a single Bro script that, when loaded by Bro, will load the scripts from all "loaded" packages at once.  This command removes a set of packages from the "loaded packages" list.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg unload [\-h] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or its path within the package source. If two packages in different package sources have conflicting paths, then the package source name may be prepended to the package path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a package source called "bro" that has a package named "foo" located in "alice/bro\-pkg.index" the following names work: "foo", "alice/foo", "bro/alice/foo".
.UNINDENT
.UNINDENT
.SS pin
.sp
Pinned packages are ignored by the \fBupgrade\fP command.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg pin [\-h] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or its path within the package source. If two packages in different package sources have conflicting paths, then the package source name may be prepended to the package path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a package source called "bro" that has a package named "foo" located in "alice/bro\-pkg.index" the following names work: "foo", "alice/foo", "bro/alice/foo".
.UNINDENT
.UNINDENT
.SS unpin
.sp
Packages that are not pinned are automatically upgraded by the \fBupgrade\fP command

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg unpin [\-h] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or its path within the package source. If two packages in different package sources have conflicting paths, then the package source name may be prepended to the package path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a package source called "bro" that has a package named "foo" located in "alice/bro\-pkg.index" the following names work: "foo", "alice/foo", "bro/alice/foo".
.UNINDENT
.UNINDENT
.SS list
.sp
Outputs a list of packages that match a given category.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg list [\-h]
                    [{all,installed,not_installed,loaded,unloaded,outdated}]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bcategory
Package category used to filter listing.
.sp
Possible choices: all, installed, not_installed, loaded, unloaded, outdated
.UNINDENT
.UNINDENT
.SS search
.sp
Perform a substring search on package names and metadata tags.  Surround search text with slashes to indicate it is a regular expression (e.g. \fB/text/\fP).

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg search [\-h] search_text [search_text ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bsearch_text
The text(s) or pattern(s) to look for.
.UNINDENT
.UNINDENT
.SS info
.sp
Shows detailed information/metadata for given packages. If the package is currently installed, additional information about the status of it is displayed.  E.g. the installed version or whether it is currently marked as "pinned" or "loaded."

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg info [\-h] [\-\-version VERSION] package [package ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bpackage
The name(s) of package(s) to operate on.  The package may be named in several ways.  If the package is part of a package source, it may be referred to by the base name of the package (last component of git URL) or its path within the package source. If two packages in different package sources have conflicting paths, then the package source name may be prepended to the package path to resolve the ambiguity. A full git URL may also be used to refer to a package that does not belong to a source. E.g. for a package source called "bro" that has a package named "foo" located in "alice/bro\-pkg.index" the following names work: "foo", "alice/foo", "bro/alice/foo".
.UNINDENT
.TP
.B Options:
.INDENT 7.0
.TP
.B \-\-version
The version of the package metadata to inspect.  A version tag, branch name, or commit hash and only one package at a time may be given when using this flag.  If unspecified, the behavior depends on whether the package is currently installed.  If installed, the metadata will be pulled from the installed version.  If not installed, the latest version tag is used, or if a package has no version tags, the "master" branch is used.
.UNINDENT
.UNINDENT
.SS config
.sp
The default output of this command is a valid package manager config file that corresponds to the one currently being used, but also with any defaulted field values filled in.  This command also allows for only the value of a specific field to be output if the name of that field is given as an argument to the command.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg config [\-h]
                      [{all,sources,state_dir,script_dir,plugin_dir,bro_dist}]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Positional arguments:
.INDENT 7.0
.TP
.Bconfig_param
Name of a specific config file field to output.
.sp
Possible choices: all, sources, state_dir, script_dir, plugin_dir, bro_dist
.UNINDENT
.UNINDENT
.SS autoconfig
.sp
The output of this command is a valid package manager config file that is generated by using the \fBbro\-config\fP script that is installed along with Bro.  It is the suggested configuration to use for most Bro installations.  For this command to work, the \fBbro\-config\fP script must be in \fBPATH\fP\&.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg autoconfig [\-h]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.UNINDENT
.SS env
.sp
This command returns shell commands that, when executed, will correctly set \fBBROPATH\fP and \fBBRO_PLUGIN_PATH\fP to utilize the scripts and plugins from packages installed by the package manager. For this command to function properly, either have the \fBbro\-config\fP script (installed by bro) in \fBPATH\fP, or have the \fBBROPATH\fP and \fBBRO_PLUGIN_PATH\fP environment variables already set so this command can append package\-specific paths to them.

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: bro\-pkg env [\-h]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.UNINDENT
.SH CONFIG FILE
.sp
The \fBbro\-pkg\fP command\-line tool uses an INI\-format config file to allow
users to customize their Package Sources, Package installation paths, Bro executable/source paths, and other
\fBbro\-pkg\fP options.
.sp
See the default/example config file below for explanations of the
available options and how to customize them:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# This is an example config file for bro\-pkg to explain what
# settings are possible as well as their default values.
# The order of precedence for how bro\-pkg finds/reads config files:
#
# (1) bro\-pkg \-\-configfile=/path/to/custom/config
# (2) the BRO_PKG_CONFIG_FILE environment variable
# (3) a config file located at $HOME/.bro\-pkg/config
# (4) if none of the above exist, then bro\-pkg uses builtin/default
#     values for all settings shown below

[sources]

# The default package source repository from which bro\-pkg fetches
# packages.  The default source may be removed, changed, or
# additional sources may be added as long as they use a unique key
# and a value that is a valid git URL.
bro = https://github.com/bro/packages

[paths]

# Directory where source repositories are cloned, packages are
# installed, and other package manager state information is
# maintained.  If left blank, this defaults to $HOME/.bro\-pkg
state_dir =

# The directory where package scripts are copied upon installation.
# A subdirectory named "packages" is always created within the
# specified path and the package manager will copy the directory
# specified by the "script_dir" option of each package\(aqs bro\-pkg.meta
# file there.
# If left blank, this defaults to <state_dir>/script_dir
# A typical path to set here is <bro_install_prefix>/share/bro/site
# If you decide to change this location after having already
# installed packages, bro\-pkg will automatically relocate them
# the next time you run any bro\-pkg command.
script_dir =

# The directory where package plugins are copied upon installation.
# A subdirectory named "packages" is always created within the
# specified path and the package manager will copy the directory
# specified by the "plugin_dir" option of each package\(aqs bro\-pkg.meta
# file there.
# If left blank, this defaults to <state_dir>/plugin_dir
# A typical path to set here is <bro_install_prefix>/lib/bro/plugins
# If you decide to change this location after having already
# installed packages, bro\-pkg will automatically relocate them
# the next time you run any bro\-pkg command.
plugin_dir =

# The directory containing Bro distribution source code.  This is only
# needed when installing packages that contain Bro plugins that are
# not pre\-built.
bro_dist =

.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
The Bro Project
.SH COPYRIGHT
2016, The Bro Project
.\" Generated by docutils manpage writer.
.
